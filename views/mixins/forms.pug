- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const confirm = _.get(options, 'confirm');
  - const isStandart = _.includes(['get', 'post'], method);
  form(action= url method= isStandart ? method : 'post' data-confirm= confirm)
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, placeholder = property, options = { as: 'text', label: false })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const isInvalid = f.errors[property] ? ' is-invalid' : ''
  .form-group
    if options.label
      label= placeholder
    input(name=getInputName(f, property) class=`form-control${isInvalid}` type=options['as'] value=`${value}` placeholder=`${placeholder}`)
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin textarea(f, property, placeholder = property, options = { as: 'text', label: false })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  - const isInvalid = f.errors[property] ? ' is-invalid' : ''
  .form-group
    if options.label
      label= placeholder
    textarea(name=getInputName(f, property) class=`form-control${isInvalid}` type=options['as'] value=`${value}` placeholder=`${placeholder}` rows='4' maxlength="255")
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ') 

mixin fieldset(f, property, value) 
  form-group(class=(f.errors[property] && 'has-danger'))
    fieldset(disabled='')
      input(name=getInputName(f, property) class='form-control' type='text' value=`${value}` placeholder=`${property}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin select(f, property, placeholder = property, items)
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group
    label= placeholder
    select(name=getInputName(f, property) class=`form-control`)
      for item in items
        - const name = item.name === undefined ? item.fullName : item.name
        option(value=`${item.id}`)= name

mixin smallField(options = { label: '', value: '' })
  .row.my-3
    .col-3.text-nowrap.py-1
        b.text-muted=options['label']
    .col-9.text-nowrap.card.card-outline-secondary.py-1= options['value']

mixin button(value = 'Save', bClass = 'success' , type = 'submit')
  .form-group
    input(class=`btn btn-block btn-${bClass}` type=`${type}` value= value)
